reticulate::repl_python()
import numpy as np
import pandas as pd
import os
os.chdir("~/GitHub/ReproRehab/")
print(os.listdir())
os.chdir("C:/Users/kelop/Documents/GitHub/ReproRehab/")
print(os.listdir())
os.chdir("./data/")
print(os.listdir())
DATA = pd.read_csv("./MASTER_EO_and_EC_EEG.csv", header=True)
DATA = pd.read_csv("./MASTER_EO_and_EC_EEG.csv")
print(DATA.head())
DATA.head()
os.listdir()
DATA[["subID", "condition", "Hz", "Fz"]]
DATA.loc[:, "subID":"F3"]
DAT2 = DATA.drop(columns=["X"])
DAT2 = DATA.drop(columns=["Unnamed: 0"])
DAT2.head()
DAT2[DAT2["subID"] == "oa01"]
DAT2[(DAT2["subID"] == "oa01") | (DAT2["subID"] == "oa02")]
DAT2[(DAT2["subID"] == "oa01") & (DAT2["Hz"] == 0.997)]
DAT2[DAT2["Hz"] <= 30]
# computing new variables
DAT3 = DAT2.copy()
DAT3["Frontal"] = (DAT3["F3"] + DAT3["F7"] + DAT3["Fz"] + DAT3["F4"] + DAT3["F8"]) / 5
DAT3.head()
DAT3["frontal"] = DAT3[["F3", "F7", "Fz", "F4", "F8"]].mean(axis=1, skipna=True)
DAT3["central"] = DAT3[["C3", "Cz", "C4"]].mean(axis=1, skipna=True)
DAT3["parietal"] = DAT3[["P3", "P7", "Pz", "P4", "P8"]].mean(axis=1, skipna=True)
DAT3["occipital"] = DAT3[["O1", "Oz", "O2"]].mean(axis=1, skipna=True)
DAT3.head()
import matplotlib.pyplot as plt
plt.scatter(DAT3["Frontal"], DAT3["frontal"])
plt.show()
corr = DAT3[["Frontal", "frontal"]].dropna().corr(method="pearson")
print(corr)
corr
DAT4 = DAT3[["subID", "condition", "Hz", "Frontal", "central", "parietal", "occipital"]].copy()
DAT4["ln_Hz"] = np.log(DAT4["Hz"])
DAT4["ln_frontal"] = np.log(DAT4["Frontal"])
DAT4["ln_central"] = np.log(DAT4["central"])
DAT4["ln_parietal"] = np.log(DAT4["parietal"])
View(DAT4)
DAT4["ln_occipital"] = np.log(DAT4["occipital"])
DAT4.head()
os.chdir("~/GitHub/ReproRehab/data/")
os.chdir("C:/Users/kelop/Documents/GitHub/ReproRehab/data/")
DAT4.to_csv("data_PROCESSED_EEG.csv", index=False)
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import scipy.stats as stats
data_path = "C:/Users/kelop/Documents/GitHub//ReproRehab/"
data_files = os.listdir(data_path)
data_files = os.listdir(data_path+"data"")
data_files = os.listdir(data_path+"data")
os.listdir(data_path+"data")
data = pd.read_csv(data_path + "data/data_PROCESSED_EEG.csv")
data.head()
View(data)
data_grouped = data.drop("X", axis=1).groupby("Hz").mean(numeric_only=True)
data_grouped = data.groupby("Hz").mean(numeric_only=True)
View(data_grouped)
# Plotting frontal power
plt.plot(data_grouped.index, data_grouped["frontal_mean"], color="black")
plt.plot(data_grouped.index, data_grouped["Frontal"], color="black")
plt.scatter(data_grouped.index, data_grouped["Frontal"], marker="o", color="black")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.title("Frontal Power")
plt.grid(True)
plt.show()
plt.plot(data_grouped.index, data_grouped["Frontal"], color="black")
plt.scatter(data_grouped.index, data_grouped["Frontal"], marker="o", color="black")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.title("Frontal Power")
plt.grid(True)
plt.show()
plt.close()
plt.plot(data_grouped.index, data_grouped["Frontal"], color="black")
plt.scatter(data_grouped.index, data_grouped["Frontal"], marker="o", color="black")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.title("Frontal Power")
plt.grid(True)
plt.show()
plt.close()
plt.plot(data_grouped["ln_Hz"], data_grouped["ln_frontal"], color="black")
plt.scatter(data_grouped["ln_Hz"], data_grouped["ln_frontal"], marker="o", color="black")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.title("Frontal Power")
plt.grid(True)
plt.show()
plt.close()
plt.plot(data_grouped["Hz"], data_grouped["ln_frontal"], color="black")
plt.scatter(data_grouped["Hz"], data_grouped["ln_frontal"], marker="o", color="black")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.title("Frontal Power")
plt.grid(True)
plt.show()
View(data_grouped)
View(data)
data_grouped.reset_index(inplace=True)
plt.plot(data_grouped["Hz"], data_grouped["Frontal"], color="black")
plt.scatter(data_grouped["Hz"], data_grouped["Frontal"], marker="o", color="black")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.close()
plt.plot(data_grouped["Hz"], data_grouped["Frontal"], color="black")
plt.scatter(data_grouped["Hz"], data_grouped["Frontal"], marker="o", color="black")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.title("Frontal Power")
plt.grid(True)
plt.show()
plt.close()
plt.plot(data_grouped["Hz"], data_grouped["ln_frontal"], color="black")
plt.scatter(data_grouped["Hz"], data_grouped["ln_frontal"], marker="o", color="black")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.title("Frontal Power")
plt.grid(True)
plt.show()
data_wide = data_grouped.drop("ln_Hz", axis=1).unstack().reset_index()
data_wide.columns = ["region", "Hz", "power"]
data_wide
data_wide = data_grouped.drop("ln_Hz", axis=1).unstack().reset_index()
data_wide
data_wide = data_grouped.drop("ln_Hz", axis=1)
data_wide
data_grouped
data_wide = data_grouped[Hz:occipital]
data_wide = data_grouped["Hz":"occipital"]
data_wide = data_grouped["Hz", "Frontal", "central", "parietal", "occipital"]
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
data_wide.unstack().reset_index()
data_group
data_grouped
data_wide = data_grouped[["Hz":"occipital"]]
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
data_wide = data_grouped.drop("Hz", axis=1).unstack().reset_index()
data_wide
data_wide.columns = ["region", "Hz", "power"]
data_wide
View(data_wide)
plt.close()
plt.plot(data_wide["Hz"], data_wide["power"], color=data_wide["region"])
plt.scatter(data_wide["Hz"], data_wide["power"], color=data_wide["region"], marker="o")
data_wide
plt.close()
plt.plot(data_wide["Hz"], data_wide["power"], color=data_wide["region"])
plt.show()
plt.close()
plt.plot(data_wide["Hz"], data_wide["power"], color=data_wide["region"])
plt.scatter(data_wide["Hz"], data_wide["power"], color=data_wide["region"], marker="o")
plt.show()
plt.plot(data_wide["Hz"], data_wide["power"], c=data_wide["region"])
plt.plot(data_wide["Hz"], data_wide["power"])
plt.scatter(data_wide["Hz"], data_wide["power"], c=data_wide["region"], marker="o")
plt.show()
plt.close()
plt.plot(data_wide["Hz"], data_wide["power"])
plt.scatter(data_wide["Hz"], data_wide["power"], c=data_wide["region"], marker="o")
c=data_wide["region"].to_numeric(),
data_wide["region"].to_numeric()
data_wide["region"]
colors = ['red','green','blue','purple', 'black']
c=data_wide["region"], cmap=matplotlib.colors.ListedColormap(colors))
colors = ['red','green','blue','purple', 'black']
colors = ["red","green","blue","purple", "black"]
plt.scatter(data_wide["Hz"], data_wide["power"],
c=data_wide["region"], cmap=matplotlib.colors.ListedColormap(colors))
c=data_wide["region"], cmap=plt.colors.ListedColormap(colors))
plt.scatter(data_wide["Hz"], data_wide["power"],
c=data_wide["region"], cmap=plt.colors.ListedColormap(colors))
plt.scatter(data_wide["Hz"], data_wide["power"],
c=data_wide["region"], cmap=plt.colors.ListedColormap(colors),
marker="o")
import matplotlib
plt.scatter(data_wide["Hz"], data_wide["power"],
c=data_wide["region"], cmap=matplotlib.colors.ListedColormap(colors),
marker="o")
to_numeric(data_wide["region"])
data_wide["region"]
x = data_wide["region"]
pd.to_numeric(data_wide["region"])
data_grouped
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
data_wide = data_grouped.drop("Hz", axis=1).unstack().reset_index()
data_wide
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
data_wide = data_wide.drop("Hz", axis=1).unstack().reset_index()
data_wide
data_wide.columns = ["region", "Hz", "power"]
data_wide
plt.close()
plt.plot(data_wide["Hz"], data_wide["power"])
colors = ["red","green","blue","purple", "black"]
pd.to_numeric(data_wide["region"])
data_wide["region"].astype(int)
pd.to_numeric(data_wide["region"])
x = pd.to_numeric(data_wide["region"])
plt.close()
plt.plot(data_wide["Hz"], data_wide["power"])
plt.close()
plt.plot(data_wide["Hz"], data_wide["power"])
plt.scatter(data_wide["Hz"], data_wide["power"], marker="o")
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.legend(data_wide["region"])
plt.grid(True)
plt.show()
data_grouped
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
data_wide = data_wide.drop("Hz", axis=1).unstack().reset_index()
data_grouped
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
data_long = data_wide.drop("Hz", axis=1).unstack().reset_index()
data_long
data_long.columns = ["region", "Hz", "power"]
data_long
plt.close()
plt.plot(data_wide["Hz"], data_wide["power"])
plt.plot(data_long['Hz'], data_long['power'], color='black', label='region')
plt.scatter(data_long['Hz'], data_long['power'], marker='o', color='black')
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.legend(data_wide["region"])
plt.legend(data_long["region"])
plt.grid(True)
plt.show()
data_long[["region"]]
x = pd.Categorical(data_wide["region"])
x = pd.Categorical(data_long["region"])
x
data_long[["region"]] = pd.Categorical(data_long["region"])
data_long[["region"]]
factor_X = pd.Categorical(data_long["region"])
x
pd.to_numeric(x)
factor_X = pd.Categorical(data_long["region"])
pd.to_numeric(factor_X)
X = ['A', 'B', 'A', 'C', 'B', 'A']
# Create a dictionary to map characters to integers
char_to_int = {char: i for i, char in enumerate(set(X))}
# Convert character vector to integers
X_int = [char_to_int[char] for char in X]
char_to_int = {char: i for i, char in enumerate(set(data_long[["region"]]))}
data_long[["region"]]
X
data_long["region"]
char_to_int = {char: i for i, char in enumerate(set(data_long["region"]))}
View(char_to_int)
data_long["region_num"] = [char_to_int[char] for char in data_long["region"]]
data_long
plt.close()
plt.close()
plt.plot(data_long['Hz'], data_long['power'], color=data_long['region_num'], label=data_long['region'])
plt.scatter(data_long['Hz'], data_long['power'], marker='o', color=data_long['region_num'])
plt.close()
plt.plot(data_long['Hz'], data_long['power'], c=data_long['region_num'], label=data_long['region'])
plt.scatter(data_long['Hz'], data_long['power'], marker='o', c=data_long['region_num'])
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.legend(data_long["region"])
plt.grid(True)
plt.show()
plt.plot(data_long['Hz'], data_long['power'], c=data_long['region_num'], label=data_long['region'])
plt.plot(data_long['Hz'], data_long['power'], label=data_long['region'])
plt.scatter(data_long['Hz'], data_long['power'], marker='-', c=data_long['region_num'])
plt.scatter(data_long['Hz'], data_long['power'], marker='o', c=data_long['region_num'])
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.legend(data_long["region"])
plt.grid(True)
plt.show()
plt.plot(data_long['Hz'], data_long['power'])
plt.scatter(data_long['Hz'], data_long['power'], marker='o', c=data_long['region_num'])
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.legend(data_long["region"])
plt.grid(True)
plt.show()
plt.close()
plt.plot(data_long['Hz'], data_long['power'])
plt.scatter(data_long['Hz'], data_long['power'], marker='o', c=data_long['region_num'])
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.legend(data_long["region"])
plt.grid(True)
plt.show()
plt.close()
plt.plot(data_long['Hz'], data_long['power'])
plt.scatter(data_long['Hz'], data_long['power'], marker='o', linestyle='-',
c=data_long['region_num'])
plt.xlabel("Frequency (Hz)")
plt.ylabel("Power (uV^2)")
plt.legend(data_long["region"])
plt.grid(True)
plt.show()
data_long
data_grouped
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
data_long = data_wide.drop("Hz", axis=1).unstack().reset_index()
data_long
data_long.columns = ["region", "Hz", "power"]
data_long
data_wide
data_long
data_wide
fig, ax = plt.subplots(figsize=(6, 4.5))
data_wide.plot()
plot.show()
plt.show()
data_wide
data_wide
data_wide=data_wide.drop("Hz", axis=1)
data_long = data_wide.drop("Hz", axis=1).unstack().reset_index()
data_wide
data_grouped
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
plt.plot(x=data_wide["Hz"])
plt.plot(data_wide["Hz"])
plt.show()
plt.close()
plt.plot(data_wide["Hz"])
plt.show()
data_grouped
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
data_wide.columns.name = 'Region'
data_wide
data_wide.drop("Hz", axis=1).columns.name = 'Region'
data_wide
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
data_wide.drop("Hz", axis=1).columns.name = 'Region'
data_wide
data_grouped
data_wide = data_grouped[["Hz", "Frontal", "central", "parietal", "occipital"]]
data_wide
plt.close()
plt.plot(data_grouped["Hz"], data_grouped["Frontal"], linestyle="-", marker="o", label="Income")
plt.plot(data_grouped["Hz"], data_grouped["central"], linestyle="-", marker="o", label="Expenses")
plt.xlabel("Frequency log(Hz)")
plt.ylabel("Power log(uV^2)")
plt.legend()
plt.show()
plt.close()
plt.plot(data_grouped["Hz"], data_grouped["Frontal"], linestyle="-", marker="o", label="Frontal")
plt.plot(data_grouped["Hz"], data_grouped["central"], linestyle="-", marker="o", label="Central")
plt.plot(data_grouped["Hz"], data_grouped["parietal"], linestyle="-", marker="o", label="Frontal")
plt.plot(data_grouped["Hz"], data_grouped["occipital"], linestyle="-", marker="o", label="Central")
plt.xlabel("Frequency log(Hz)")
plt.ylabel("Power log(uV^2)")
plt.legend()
plt.show()
plt.close()
plt.plot(data_grouped["Hz"], data_grouped["Frontal"], linestyle="-", marker="o", label="Frontal")
plt.plot(data_grouped["Hz"], data_grouped["central"], linestyle="-", marker="o", label="Central")
plt.plot(data_grouped["Hz"], data_grouped["parietal"], linestyle="-", marker="o", label="Frontal")
plt.plot(data_grouped["Hz"], data_grouped["occipital"], linestyle="-", marker="o", label="Central")
plt.xlabel("Frequency log(Hz)")
plt.ylabel("Power log(uV^2)")
plt.legend("Region")
plt.grid(True)
plt.show()
plt.close()
plt.plot(data_grouped["Hz"], data_grouped["Frontal"], linestyle="-", marker="o", label="Frontal")
plt.plot(data_grouped["Hz"], data_grouped["central"], linestyle="-", marker="o", label="Central")
plt.plot(data_grouped["Hz"], data_grouped["parietal"], linestyle="-", marker="o", label="Frontal")
plt.plot(data_grouped["Hz"], data_grouped["occipital"], linestyle="-", marker="o", label="Central")
plt.xlabel("Frequency log(Hz)")
plt.ylabel("Power log(uV^2)")
plt.legend(title="Region")
plt.grid(True)
plt.show()
data_grouped
data_wide = data_grouped[["Hz", "ln_frontal", "ln_central", "ln_parietal", "ln_occipital"]]
data_wide
plt.close()
plt.plot(data_grouped["Hz"], data_grouped["ln_frontal"], linestyle="-", marker="o", label="Frontal")
plt.plot(data_grouped["Hz"], data_grouped["ln_central"], linestyle="-", marker="o", label="Central")
plt.plot(data_grouped["Hz"], data_grouped["ln_parietal"], linestyle="-", marker="o", label="Frontal")
plt.plot(data_grouped["Hz"], data_grouped["ln_occipital"], linestyle="-", marker="o", label="Central")
plt.xlabel("Frequency log(Hz)")
plt.ylabel("Power log(uV^2)")
plt.legend(title="Region")
plt.grid(True)
plt.show()
quit()
